<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>L3m0nade的博客</title>
  
  
  <link href="http://blog.l3m0nade.xyz/atom.xml" rel="self"/>
  
  <link href="http://blog.l3m0nade.xyz/"/>
  <updated>2021-09-06T16:59:49.388Z</updated>
  <id>http://blog.l3m0nade.xyz/</id>
  
  <author>
    <name>L3m0nade</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo博客搭建详细教程 一文通</title>
    <link href="http://blog.l3m0nade.xyz/2021/09/07/hexoBlogBuild/"/>
    <id>http://blog.l3m0nade.xyz/2021/09/07/hexoBlogBuild/</id>
    <published>2021-09-06T16:29:00.000Z</published>
    <updated>2021-09-06T16:59:49.388Z</updated>
    
    <content type="html"><![CDATA[<h2 id="提纲"><a href="#提纲" class="headerlink" title="提纲"></a>提纲</h2><ul><li>本篇教程适用于从0.1-1搭建Hexo博客的师傅，对于一些初始环境配置和微小操作可能会忽略到，但这不会影响整体搭建博客的过程。</li><li>Hexo博客可以选择Hexo+Github Pages架构或者Hexo+Github Pages+你的服务器（有无域名都可）。第二种就是第一种做了对服务器的迁移，需要一些git认证和nginx配置和域名解析设置。</li><li>所以下文会进行从第一种到第二种的全部实现过程。以及一些小的美化。</li></ul><span id="more"></span><h2 id="什么是Hexo"><a href="#什么是Hexo" class="headerlink" title="什么是Hexo"></a>什么是Hexo</h2><p> Hexo 是一个基于 Node.js 快速、简洁且高效的博客框架，可以将 Markdown 文件快速的生成静态网页，托管在<a href="https://pages.github.com/">GitHub Pages</a> 或者<a href="https://pages.coding.net/">Coding Pages </a>上 。</p><h2 id="个人环境与相关网站账号准备："><a href="#个人环境与相关网站账号准备：" class="headerlink" title="个人环境与相关网站账号准备："></a>个人环境与相关网站账号准备：</h2><ul><li><p>Github账号：<a href="https://github.com/">https://github.com/</a></p></li><li><p>七牛云账号：<a href="http://www.qiniu.com/">http://www.qiniu.com/</a> 用来储存图片等</p></li><li><p>Win10</p></li><li><p>git bash <a href="http://git-scm.com/">下载安装</a>  <strong>git只是一种版本控制工具，而GitHub是支持git的一个代码仓库网站</strong> </p></li><li><p>nodejs <a href="https://nodejs.org/en/">下载安装</a></p></li><li><p>服务器（个人是阿里云买的学生服务器，Ubuntu20.04)</p></li><li><p>提前买好，审核好，备案好的域名</p></li><li><p>个人版本：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">L3m0nade@DESKTOP-<span class="number">7</span>PB7DBA MINGW64 <span class="regexp">/d/</span>hexo</span><br><span class="line">$ git --version</span><br><span class="line">git version <span class="number">2.30</span>.<span class="number">0</span>.windows.<span class="number">2</span></span><br><span class="line"></span><br><span class="line">L3m0nade@DESKTOP-<span class="number">7</span>PB7DBA MINGW64 <span class="regexp">/d/</span>hexo</span><br><span class="line">$ node -v</span><br><span class="line">v12.<span class="number">16.1</span></span><br><span class="line">(官方建议使用nodejs10.<span class="number">0.0</span>以上版本)</span><br><span class="line">L3m0nade@DESKTOP-<span class="number">7</span>PB7DBA MINGW64 <span class="regexp">/d/</span>hexo</span><br><span class="line">$ npm -v</span><br><span class="line"><span class="number">6.13</span>.<span class="number">4</span></span><br><span class="line">(nodejs包管理器，类似python的pip)</span><br></pre></td></tr></table></figure></li></ul><h2 id="Hexo-Github-Pages（没用到个人服务器）"><a href="#Hexo-Github-Pages（没用到个人服务器）" class="headerlink" title="Hexo+Github Pages（没用到个人服务器）"></a>Hexo+Github Pages（没用到个人服务器）</h2><h3 id="Github-Pages"><a href="#Github-Pages" class="headerlink" title="Github Pages???"></a>Github Pages???</h3><ul><li><strong>GitHub Pages</strong>是GitHub公司提供的免费静态网站托管服务。</li><li><strong>GitHub Pages</strong>严格意义上来说并不是一个服务器，只是可以提供类似服务器功能的<strong>一种服务</strong>。</li><li>当我们把HTML等资源文件存放到GitHub指定的位置时，也就是一个<strong>GitHub Pages仓库</strong>下，<strong>GitHub Pages服务</strong>会对这些文件进行处理并把它展示为一个网站。</li><li>所以说可以<strong>将GitHub Pages提供的功能替代Web服务器的功能</strong>。我们只需要把编写好的HTML等资源文件存到<strong>GitHub指定的位置</strong>，那么就实现了类似的Web服务器的功能，可以响应请求，并把相应的资源文件发送给客户端。 </li></ul><h3 id="GitHub-Pages设置"><a href="#GitHub-Pages设置" class="headerlink" title="GitHub Pages设置"></a>GitHub Pages设置</h3><p>如果你是初次安装git，需要初始化一些配置：</p><ul><li><p>设置git用户信息,在桌面上点击右键git bash Here</p> <figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config  -<span class="keyword">global</span> <span class="keyword">user</span>.name &quot;your_username&quot;</span><br><span class="line">git config  -<span class="keyword">global</span> <span class="keyword">user</span>.email &quot;your_email&quot;</span><br></pre></td></tr></table></figure></li><li><p>生成SSH Key公钥 </p><ul><li><p>检查一下Windows下的“C:\Users\用户名.ssh”文件下有没有生成过id_rsa 和 id_rsa.pub的公私钥文件。</p></li><li><p>若没有：</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -<span class="built_in">t</span> rsa -C “your_github_email”</span><br></pre></td></tr></table></figure></li><li><p>这样你就在本地生成rsa的公私钥了</p></li></ul></li><li><p>在github上配置公钥</p><ul><li>github.com，点击头像，点击settings，点击左边的SSH and GPG keys,再点击右上角new ssh key.</li><li>用notepad++打开之前的id_rsa.pub文件，将内容复制到框里保存即可。</li></ul></li><li><p>创建Github Pages仓库</p><ul><li>点击右上角+号，创建新仓库：new respository.</li><li> 在Repository name输入框中你需要填入你的【Github用户名.github.io】，这一点非常重要。因为这样才能保证你建立的是GithubPages页面而不是其他的代码仓库。</li><li>勾选Initialize this repository with a README选项。</li><li>这个时候你在浏览器输入<a href="https://your_github_name.github.io后,可以看到一个简陋的界面,那么说明你已经成功开启了githubpages服务了./">https://your_github_name.github.io后，可以看到一个简陋的界面，那么说明你已经成功开启了GithubPages服务了。</a></li></ul></li><li><p>下面需要做的就是安装Hexo，并且使用Hexo来生成Blog站点。 </p></li></ul><h3 id="Hexo-安装"><a href="#Hexo-安装" class="headerlink" title="Hexo 安装"></a>Hexo 安装</h3><ul><li><p>先在本地创建一个放Hexo东西的文件夹，我创在了D:\hexo</p></li><li><p>在git bash中打开到此路径，安装后做初始化。这里可能init会很慢导致openssl ssl超时断链，这里我把梯子改为全局配置后解决的。</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">cd D:</span><br><span class="line">cd hexo</span><br><span class="line"></span><br><span class="line">L3m0nade@DESKTOP-<span class="number">7</span>PB7DBA MINGW64 <span class="regexp">/d/</span>hexo</span><br><span class="line">$ npm install -g hexo-cli</span><br><span class="line"></span><br><span class="line">D:\NodeJS\node_global\hexo -&gt; D:\NodeJS\node_global\node_modules\hexo-cli\bin\hexo</span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~<span class="number">2.3</span>.<span class="number">2</span> (node_modules\hexo-cli\node_modules\chokidar\node_modules\fsevents):</span><br><span class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform <span class="keyword">for</span> fsevents@<span class="number">2.3</span>.<span class="number">2</span>: wanted &#123;<span class="string">&quot;os&quot;</span>:<span class="string">&quot;darwin&quot;</span>,<span class="string">&quot;arch&quot;</span>:<span class="string">&quot;any&quot;</span>&#125; (current: &#123;<span class="string">&quot;os&quot;</span>:<span class="string">&quot;win32&quot;</span>,<span class="string">&quot;arch&quot;</span>:<span class="string">&quot;x64&quot;</span>&#125;)</span><br><span class="line"></span><br><span class="line">+ hexo-cli@<span class="number">4.3</span>.<span class="number">0</span></span><br><span class="line">updated <span class="number">1</span> <span class="keyword">package</span> in <span class="number">6.773</span>s</span><br><span class="line"></span><br><span class="line">L3m0nade@DESKTOP-<span class="number">7</span>PB7DBA MINGW64 <span class="regexp">/d/</span>hexo</span><br><span class="line">$ hexo init</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">L3m0nade@DESKTOP-<span class="number">7</span>PB7DBA MINGW64 <span class="regexp">/d/</span>hexo</span><br><span class="line">$ ls</span><br><span class="line">_config.landscape.yml  node_modules<span class="regexp">/      package.json  source/</span></span><br><span class="line">_config.yml            <span class="keyword">package</span>-lock.json  scaffolds<span class="regexp">/    themes/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">L3m0nade@DESKTOP-<span class="number">7</span>PB7DBA MINGW64 <span class="regexp">/d/</span>hexo</span><br><span class="line">$ hexo g</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">L3m0nade@DESKTOP-<span class="number">7</span>PB7DBA MINGW64 <span class="regexp">/d/</span>hexo</span><br><span class="line">$ hexo s </span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>打开 <a href="http://localhost:4000/">http://localhost:4000</a> 可以查看到当前hexo web样式.如果端口被占可以考虑<a href="https://www.runoob.com/w3cnote/windows-finds-port-usage.html">https://www.runoob.com/w3cnote/windows-finds-port-usage.html</a> 自行解决。</p></li><li><p>这时会发现hexo目录下多了东西：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">L3m0nade@DESKTOP-<span class="number">7</span>PB7DBA MINGW64 <span class="regexp">/d/</span>hexo</span><br><span class="line">$ ls</span><br><span class="line">_config.landscape.yml  db.json        <span class="keyword">package</span>-lock.json  <span class="keyword">public</span><span class="regexp">/     source/</span></span><br><span class="line">_config.yml            node_modules<span class="regexp">/  package.json       scaffolds/</span>  themes/</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>出现一个public文件夹，里面是 hexo generate命令之后，将souce文件夹下的Markdown和HTML文件解析到了public文件夹下，并生成了db.json文件 </p><ul><li><p> <strong>_config.yml是整个博客的配置文件</strong> </p></li><li><p>将博客部署到 github 个人主页上，安装插件：</p></li><li><p>npm install hexo-deployer-git –save  </p></li><li><p>编辑目录下的 _config.yml 文件, 在文件末尾添加如下内容： </p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line">      <span class="attribute">type</span>: git</span><br><span class="line">      <span class="attribute">repo</span>: git@github.com:l<span class="number">3</span>m<span class="number">0</span>nade/l<span class="number">3</span>m<span class="number">0</span>nade.github.io.git</span><br><span class="line">      <span class="attribute">branch</span>: master</span><br></pre></td></tr></table></figure></li><li><p>然后hexo d，就可以把本地的public的内容上传到l3m0nade.github.io，然后访问就行了。</p></li></ul></li><li><p><strong>到此为止本地搭建到git到github，使用xxx.github.io查看安装成功的初始化就结束了。</strong></p></li><li><p>这里记录一下hexo的4个命令：</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="attr">clean</span>  = hexo c <span class="comment"># 清除本地缓存，也就是清除public/文件夹和db.json文件。</span></span><br><span class="line"></span><br><span class="line">hexo <span class="attr">generate</span> = hexo g <span class="comment"># 将souce文件夹下的Markdown和HTML文件解析到了public文件夹下，并生成了db.json文件</span></span><br><span class="line"></span><br><span class="line">hexo <span class="attr">server</span> = hexo s <span class="comment"># 开启本地调试模式</span></span><br><span class="line"></span><br><span class="line">hexo <span class="attr">deploy</span> = hexo d <span class="comment"># 将本地资源部署到GithubPages</span></span><br></pre></td></tr></table></figure></li><li><p>scaffolds文件夹</p><ul><li>scaffolds是模板文件夹，当创建新的文章时，Hexo会根据scaffold里的不同模板来建立文件. Hexo的<strong>三种默认布局post、page和draft</strong>。使用Hexo创建三种模板类型的文件时，被创建的文件会被保存到不同的路径。而我们<strong>自定义的其他布局和post相同，都会保存在source/_posts文件夹下</strong>。 </li></ul></li><li><p>source文件夹</p><ul><li>source资源文件夹，是存放用户资源的地方。除post文件夹除外，开头以_（下划线）命名的文件/文件夹或隐藏文件都会在generate时被忽略。Markdown和HTML文件夹会被解析到public文件夹下，其它文件格式的文件会被直接拷贝过去。</li></ul></li><li><p>themes文件夹</p><ul><li> <strong>themes</strong>是主题文件夹。Hexo会根据设置的主题来生成静态的页面，刚才说到<strong>使用Hexo init</strong>生成的初始化站点的主题可能并不是你预估的样子 </li></ul></li></ul><h3 id="Next主题"><a href="#Next主题" class="headerlink" title="Next主题"></a>Next主题</h3><p>原生的Hexo主题不好看，这里直接换掉换位Next。虽然hexo官网上有很多主题，但是Next还是经典，布局舒心。直接在D:\hexo文件下：</p><p><strong>这里注意一下不同hexo next主题的版本：链接不一样</strong></p><table><thead><tr><th>年份</th><th>版本</th><th>仓库</th></tr></thead><tbody><tr><td>2014 ~ 2017</td><td>v5</td><td><a href="https://github.com/iissnan/hexo-theme-next">https://github.com/iissnan/hexo-theme-next</a></td></tr><tr><td>2018 ~ 2019</td><td>v6 ~ v7</td><td><a href="https://github.com/theme-next/hexo-theme-next">https://github.com/theme-next/hexo-theme-next</a></td></tr><tr><td>2020</td><td>v8</td><td><a href="https://github.com/next-theme/hexo-theme-next">https://github.com/next-theme/hexo-theme-next</a></td></tr></tbody></table><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:<span class="regexp">//gi</span>thub.com<span class="regexp">/next-theme/</span>hexo-theme-<span class="keyword">next</span> themes/<span class="keyword">next</span></span><br></pre></td></tr></table></figure><p>然后就_config.yml中的theme一行改为：</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">theme:</span> <span class="keyword">next</span></span><br></pre></td></tr></table></figure><p>更新：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo clean</span></span><br><span class="line"><span class="attribute">hexo g</span></span><br><span class="line"><span class="attribute">hexo d</span></span><br></pre></td></tr></table></figure><p><strong>注意：每次这种更新，都要hexo g,(hexo s是本地，可以hexo s –debug先本地测试一下)然后hexo d上传，github.io才会变。</strong> </p><p><strong>修改生成的默认页面信息，要到主题下面的config.yml文件里面去改，而不是根目录下的config.yml文件</strong> </p><h2 id="Hexo-Github-Pages-个人服务器"><a href="#Hexo-Github-Pages-个人服务器" class="headerlink" title="Hexo +Github Pages+个人服务器"></a>Hexo +Github Pages+个人服务器</h2><h3 id="服务器环境搭建"><a href="#服务器环境搭建" class="headerlink" title="服务器环境搭建"></a>服务器环境搭建</h3><ul><li>xshell或ssh连接服务器后，所在目录/root</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> update</span><br><span class="line">sudo apt-<span class="builtin-name">get</span> install git</span><br><span class="line">sudo apt-<span class="builtin-name">get</span> install nginx</span><br></pre></td></tr></table></figure><h3 id="Git环境配置"><a href="#Git环境配置" class="headerlink" title="Git环境配置"></a>Git环境配置</h3><ul><li>加入git账户：</li></ul><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">adduser git</span></span><br></pre></td></tr></table></figure><ul><li>添加git用户权限</li></ul><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">chmod</span> <span class="number">740</span> /etc/sudoers</span><br><span class="line"><span class="attribute">vim</span> /etc/sudoers</span><br><span class="line"></span><br><span class="line"><span class="attribute">root</span>    <span class="literal">ALL</span>=(<span class="literal">ALL</span>)  <span class="literal">ALL</span>下面加入一行代码</span><br><span class="line"><span class="attribute">git</span>     <span class="literal">ALL</span>=(<span class="literal">ALL</span>)     <span class="literal">ALL</span></span><br></pre></td></tr></table></figure><ul><li>然后esc键，:wq保存退出。</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod <span class="number">400</span> <span class="regexp">/etc/</span>sudoers</span><br></pre></td></tr></table></figure><ul><li> 创建 ~/.ssh 文件夹和 ~/.ssh/authorized_keys 文件，并赋予相应的权限 ：</li></ul><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/.ssh</span><br><span class="line">vim ~<span class="regexp">/.ssh/</span>authorized_keys</span><br></pre></td></tr></table></figure><ul><li>按”i”进入编辑模式，将我们在win10中生成的id_rsa.pub文件中的公钥复制到authorized_keys中，按”esc”，然后按”:wq”，保存退出。 </li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod <span class="number">600</span> <span class="regexp">/home/gi</span>t<span class="regexp">/.ssh/</span>authorized_keys</span><br><span class="line">chmod <span class="number">700</span> <span class="regexp">/home/gi</span>t/.ssh</span><br></pre></td></tr></table></figure><ul><li>git bash里测试一下你的ssh连接：</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh -v git@你的服务器ip</span><br><span class="line">。。。</span><br><span class="line">Welcome <span class="keyword">to</span> Alibaba Cloud Elastic Compute<span class="built_in"> Service </span>!</span><br></pre></td></tr></table></figure><ul><li><p>换回root用户，服务器上创建仓库目录</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir <span class="regexp">/var/</span>repo    <span class="comment">#新建目录，这是git仓库的位置</span></span><br><span class="line">sudo mkdir <span class="regexp">/var/</span>www         <span class="comment">#</span></span><br><span class="line">sudo mkdir <span class="regexp">/var/</span>www/hexo  <span class="comment">#这是博客源文件的目录</span></span><br><span class="line">cd <span class="regexp">/var/</span>repo  <span class="comment">#转到git仓库的文件夹</span></span><br><span class="line">sudo git init --bare blog.git <span class="comment">#创建一个名叫blog的仓库</span></span><br><span class="line">sudo vim <span class="regexp">/var/</span>repo<span class="regexp">/blog.git/</span>hooks/post-update</span><br><span class="line"></span><br><span class="line">vim:</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">git --work-tree=<span class="regexp">/var/</span>www<span class="regexp">/hexo --git-dir=/</span>var<span class="regexp">/repo/</span>blog.git checkout -f</span><br></pre></td></tr></table></figure><ul><li><p> 当我们从本地push上去时，git-hooks会自动执行上面命令，这是git自带的的方法，表示在<code>/var/repo/blog.git</code>中对<code>/var/www/hexo</code>执行<code>checkout -f</code>命令，可以在我们每次 push 完之后，把部署目录更新到博客的最新状态</p></li><li><p>更改权限：</p> <figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  cd blog.git<span class="regexp">/hooks/</span></span><br><span class="line">  sudo chown -R git:git <span class="regexp">/var/</span>repo/      <span class="comment">#进行文件夹及其子文件所有者变更</span></span><br><span class="line">  sudo chown -R git:git <span class="regexp">/var/</span>www/hexo  <span class="comment">#进行文件夹及其子文件所有者变更</span></span><br><span class="line">  sudo chmod +x post-update  <span class="comment">#赋予其可执行权限</span></span><br><span class="line">  </span><br><span class="line">sudo nginx -t <span class="comment">#可以看到配置文件路径</span></span><br><span class="line">  sudo vim <span class="regexp">/etc/</span>nginx/nginx.conf</span><br></pre></td></tr></table></figure><h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2> <figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">我的域名是阿里云的，l3m0nade<span class="selector-class">.xyz</span>,以此为例.</span><br><span class="line">在域名解析的后台位置，点击域名连接（云解析-&gt;域名解析-&gt;解析设置）</span><br><span class="line">添加记录</span><br><span class="line">主机记录填个词，比如blog,记录类型填写CNAME，用于后面记录处填写域名。这里记录的域名填写l3m0nade<span class="selector-class">.github</span>.io。即把blog<span class="selector-class">.lem0nade</span>.xyz和解析到l3m0nade<span class="selector-class">.github</span><span class="selector-class">.io</span></span><br><span class="line">这里还没完，github里面要改一下域名设置才能解析成功。</span><br></pre></td></tr></table></figure></li><li><p>Github Pages绑定域名</p></li><li><p>github.com中xxx.github.io打开settings</p></li><li><p>在Github Pages的Custom domains输入你的域名blog.l3m0nade.xyz</p></li></ul></li></ul><h3 id="配置sitemap让搜索引擎找到blog"><a href="#配置sitemap让搜索引擎找到blog" class="headerlink" title="配置sitemap让搜索引擎找到blog"></a>配置sitemap让搜索引擎找到blog</h3><p> 搜索引擎是通过站点地图（sitemap）去抓取可供爬取的网页的，所以首先需要配置站点的sitemap以允许搜索爬虫搜集到博客的站点信息。 </p><p> Hexo有自动生成站点地图的工具，在博客根目录（D:\hexo）下输入以下命令以<strong>生成sitemap</strong>: </p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install </span>hexo-generator-sitemap -save</span><br><span class="line">npm <span class="keyword">install </span>hexo-generator-<span class="keyword">baidu-sitemap </span>-save</span><br></pre></td></tr></table></figure><p> 我们希望Google和百度用户都能搜索到此博客，所以需要两个不同的sitemap。然后需要在博客的<strong>themes文件夹里的_config.yml</strong>中作以下配置： </p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># sitemap</span></span><br><span class="line"><span class="symbol">sitemap:</span></span><br><span class="line"><span class="symbol">  path:</span> sitemap.xml</span><br><span class="line"><span class="symbol">baidusitemap:</span></span><br><span class="line"><span class="symbol">  path:</span> baidusitemap.xml</span><br></pre></td></tr></table></figure><p>做好之后可以hexo g,hexo s –debug在本地看一下，能否打开<a href="http://localhost:4000/sitemap.xml%E5%8D%B3%E5%8F%AF%E3%80%82">http://localhost:4000/sitemap.xml即可。</a></p><p>然后需要<a href="https://www.google.com/webmasters/tools/">google</a>和<a href="https://ziyuan.baidu.com/">百度</a>的验证</p><ul><li><p>google html验证：</p><ul><li><p>根据要求下载html文件</p></li><li><p><strong>由于执行hexo generate命令之后，会将souce文件夹下的Markdown和HTML文件解析到public文件夹下，使用hexo deploy时会把public文件夹下的文件拷贝到Github pages中</strong>，所以直接<strong>把这个html放到public文件加下</strong>就可以，然后<strong>执行hexo deploy</strong>，注意这个时候<strong>不用执行hexo generate</strong>。大概等待1分钟左右，点击验证出现以下对话框代表验证成功。 </p></li><li><p>验证成功后选择前往资源，会进入<a href="https://www.google.com/webmasters/tools/">这个网站</a>，在左侧的工具栏选择站点地图，并在弹出的界面<strong>输入sitemap的存放路径</strong>。比如我的是：<a href="https://blog.l3m0nade.xyz/sitemap.xml">https://blog.l3m0nade.xyz/sitemap.xml</a></p></li><li><p>当public/为站点的根目录后，此时输入的就是sitemap在public/文件夹下的位置。</p></li><li><p>等待一段时间，你就可以通过Google检索到你的博客了。而如何通过百度进行站点地图设置大同小异，你可以自己尝试一下。</p></li></ul></li><li><p>百度验证：</p><ul><li>填写各种验证信息，绑定百度账号等等</li><li>最后还是下载一个html作为验证文件上传到服务器上，和刚刚操作一样</li><li>接着进入资源提交界面，写入sitemap.xml文件地址</li></ul></li></ul><p>如果还有问题可以参考<a href="https://www.jianshu.com/p/5e68f78c7791">这一篇</a></p><p><strong>注意：</strong></p><ul><li><p><strong>解决每次hexo clean,generate,deploy后自己的域名被重置，又成为xxx.github.io的问题：</strong></p></li><li><p><strong>在sources文件夹下创建文件名为CNAME文件，里面内容为你的域名，然后再clean,g,d就行了。</strong></p></li></ul><p><a href="https://blog.csdn.net/qq_38332436/article/details/81907686">参考这个链接</a></p><h2 id="Hexo-Next-配置"><a href="#Hexo-Next-配置" class="headerlink" title="Hexo Next 配置"></a>Hexo Next 配置</h2><p>我们要关注的是这两个文件：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/hexo/</span>_config.yml</span><br><span class="line"></span><br><span class="line"><span class="regexp">/hexo/</span>themes<span class="regexp">/next/</span>_config.yml</span><br></pre></td></tr></table></figure><p>Next的配置文件推荐使用<a href="https://theme-next.js.org/docs/getting-started/configuration">网站教程</a>，不要改动_config.yml,说白了就是不想改动原文件，将配置文件路径重新设置一个新的。我们提前备份一下或者用git控制一下_config.yml就可以了。</p><p>有关Next配置可以看着<a href="https://theme-next.js.org/docs/theme-settings/">文档</a>改，这个说的比我清楚多了</p><p>下面记录一些比较特别的</p><ul><li><p>对于/hexo/_config.yml,<a href="https://hexo.io/zh-cn/docs/configuration.html">参考链接</a></p><ul><li><p>site</p></li><li><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>title</code></td><td align="left">网站标题</td></tr><tr><td align="left"><code>subtitle</code></td><td align="left">网站副标题</td></tr><tr><td align="left"><code>description</code></td><td align="left">网站描述</td></tr><tr><td align="left"><code>keywords</code></td><td align="left">网站的关键词。支持多个关键词。</td></tr><tr><td align="left"><code>author</code></td><td align="left">您的名字</td></tr><tr><td align="left"><code>language</code></td><td align="left">网站使用的语言。对于简体中文用户来说，使用不同的主题可能需要设置成不同的值，请参考你的主题的文档自行设置，常见的有 <code>zh-Hans</code>和 <code>zh-CN</code>。</td></tr><tr><td align="left"><code>timezone</code></td><td align="left">网站时区。Hexo 默认使用您电脑的时区。请参考 <a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones">时区列表</a> 进行设置，如 <code>America/New_York</code>, <code>Japan</code>, 和 <code>UTC</code> 。一般的，对于中国大陆地区可以使用 <code>Asia/Shanghai</code>。</td></tr></tbody></table></li><li><p>url</p></li><li><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left"><code>url</code></td><td align="left">网址, 必须以 <code>http://</code> 或 <code>https://</code> 开头</td><td align="left"></td></tr><tr><td align="left"><code>root</code></td><td align="left">网站根目录</td><td align="left"><code>url&#39;s pathname</code></td></tr><tr><td align="left"><code>permalink</code></td><td align="left">文章的 <a href="https://hexo.io/zh-cn/docs/permalinks">永久链接</a> 格式</td><td align="left"><code>:year/:month/:day/:title/</code></td></tr><tr><td align="left"><code>permalink_defaults</code></td><td align="left">永久链接中各部分的默认值</td><td align="left"></td></tr><tr><td align="left"><code>pretty_urls</code></td><td align="left">改写 <a href="https://hexo.io/zh-cn/docs/variables"><code>permalink</code></a> 的值来美化 URL</td><td align="left"></td></tr><tr><td align="left"><code>pretty_urls.trailing_index</code></td><td align="left">是否在永久链接中保留尾部的 <code>index.html</code>，设置为 <code>false</code> 时去除</td><td align="left"><code>true</code></td></tr><tr><td align="left"><code>pretty_urls.trailing_html</code></td><td align="left">是否在永久链接中保留尾部的 <code>.html</code>, 设置为 <code>false</code> 时去除 (<em>对尾部的 <code>index.html</code>无效</em>)</td><td align="left"><code>true</code></td></tr></tbody></table></li></ul><p>剩下的一些基本不用改，想知道可以点<a href="https://hexo.io/zh-cn/docs/configuration.html">参考链接</a>去看一下</p></li><li><p>Local Search插件</p><ul><li><p> npm install hexo-generator-searchdb –save </p></li><li><p>修改<code>hexo/_config.yml</code>站点配置文件，新增以下内容到任意位置： </p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">search:</span></span><br><span class="line"><span class="symbol">    path:</span> search.xml</span><br><span class="line"><span class="symbol">    field:</span> post</span><br><span class="line"><span class="symbol">    format:</span> html</span><br><span class="line"><span class="symbol">    limit:</span> <span class="number">10000</span> </span><br></pre></td></tr></table></figure></li><li><p> 编辑 <strong>themes里的配置文件</strong>，启用本地搜索功能，将Local Search里改为True即可，generate,deploy 后可在页面内搜索</p></li></ul></li><li><p>设置图标</p><ul><li><p>找一张喜欢的 ico 图标 ， 并将图标名称改为 favicon.ico，然后把图标放在 <code>/themes/next/source/images</code> 里，并且修改主题配置文件：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">favicon:</span></span><br><span class="line"><span class="symbol">    small:</span> <span class="meta-keyword">/images/</span>favicon.ico</span><br><span class="line"><span class="symbol">    medium:</span> <span class="meta-keyword">/images/</span>favicon.ico</span><br></pre></td></tr></table></figure></li></ul></li><li><p>开启自定义swig文件功能</p><ul><li> 将 <code>custom_file_path:</code> 属性下面的值全部取消注释, 并且在<strong>网站根目录</strong>下的 source 文件夹中新建 <code>_data</code> 文件夹, 注意不是在主题根目录下的 source 文件夹中新建. 之后在 <code>_data</code> 文件夹中将对应的所有文件全部手动创建好(因为不会自动创建). 之后如果要自定义样式, 直接修改这些文件就行了. </li><li>比如想要自定义背景就要改styles.styl</li></ul></li><li><p>添加阅读量统计功能</p><ul><li><p>还有一种是<a href="https://theme-next.js.org/docs/theme-settings/posts.html?highlight=wordcount#Post-Wordcount">post-wordcount</a>,这个不行就下面这个。</p></li><li><p>直接主题配置文件里找busuanzi:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors_icon:</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">total_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_views_icon:</span> <span class="string">fa</span> <span class="string">fa-eye</span></span><br><span class="line">  <span class="attr">post_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post_views_icon:</span> <span class="string">fa</span> <span class="string">fa-eye</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>开启RSS订阅</p><ul><li> npm install –save hexo-generator-feed </li><li> 在主题配置文件中搜索 rss 设置为: <code>rss: /atom.xml</code> </li></ul></li><li><p>头像显示</p><ul><li><p>更改 Next 主题的配置文件 <code>themes/next/_config.yml</code>，设置以下内容 </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/images/avatar.png</span>      <span class="comment"># 头像图片</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">true</span>                <span class="comment"># 头像显示在圆里</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">true</span>                <span class="comment"># 鼠标焦点落在头像时，是否转动头像</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>添加背景图片和透明度</p><ul><li><p><code>hexo</code>目录下，在<code>source/_data</code>(<code>_data</code>目录之前没手动创建过的话要手动创建)下新建<code>styles.styl</code>，内容为 </p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line"> <span class="attribute">background</span>:url(/images/background.jpg);</span><br><span class="line"> <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">    <span class="attribute">background-attachment</span>:fixed;</span><br><span class="line">    <span class="attribute">background-position</span>:<span class="number">50%</span> <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">background-size</span>:<span class="number">100%</span> <span class="number">100%</span>;</span><br><span class="line">&#125;    </span><br><span class="line"><span class="comment">// 文章主体透明度</span></span><br><span class="line"><span class="selector-class">.main-inner</span>&#123;</span><br><span class="line"><span class="attribute">opacity</span>: <span class="number">0.9</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 放置头像等的边栏透明度</span></span><br><span class="line"><span class="selector-class">.sidebar</span>&#123;</span><br><span class="line"><span class="attribute">opacity</span>: <span class="number">0.7</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 标题等头部透明度</span></span><br><span class="line"><span class="selector-class">.header-inner</span>&#123;</span><br><span class="line"><span class="attribute">opacity</span>: <span class="number">0.7</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 底部透明度</span></span><br><span class="line"><span class="selector-class">.footer-inner</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:black;</span><br><span class="line"><span class="attribute">opacity</span>: <span class="number">0.7</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>说明：</p><ul><li>background:图片路径，也可以直接使用链接</li><li>background-repeat：若果背景图片不能全屏，那么是否平铺显示，充满屏幕，no-repeat不平铺</li><li>background-attachment：背景是否随着网页上下滚动而滚动，fixed为当页面的其余部分滚动时，背景图像不会移动</li><li>background-position：就是调整图片的位置</li><li>background-size：图片展示大小，这里如果设置100% 100%，当背景图片不能全屏，通过拉伸的方式将背景强制拉伸至全屏显示。如果不添加，图片虽然不会完整显示，但不会因为拉伸变形。个人更喜欢不加这个属性。</li></ul><p>然后在<code>next</code>主题的<code>_config.yml</code>下<code>custom_file_path</code>解开<code>style: source/_data/styles.styl</code>注释。</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># Define custom <span class="keyword">file</span> paths.</span><br><span class="line"># Create your custom files in site directory `<span class="keyword">source</span>/_data` and uncomment needed files below.</span><br><span class="line">custom_file_path:</span><br><span class="line">  #head: <span class="keyword">source</span><span class="regexp">/_data/</span>head.njk</span><br><span class="line">  #header: <span class="keyword">source</span><span class="regexp">/_data/</span>header.njk</span><br><span class="line">  #sidebar: <span class="keyword">source</span><span class="regexp">/_data/</span>sidebar.njk</span><br><span class="line">  #postMeta: <span class="keyword">source</span><span class="regexp">/_data/</span>post-meta.njk</span><br><span class="line">  #postBodyEnd: <span class="keyword">source</span><span class="regexp">/_data/</span>post-body-end.njk</span><br><span class="line">  #footer: <span class="keyword">source</span><span class="regexp">/_data/</span>footer.njk</span><br><span class="line">  footer: <span class="keyword">source</span><span class="regexp">/_data/</span>footer.swig</span><br><span class="line">  #bodyEnd: <span class="keyword">source</span><span class="regexp">/_data/</span>body-end.njk</span><br><span class="line">  #variable: <span class="keyword">source</span><span class="regexp">/_data/</span>variables.styl</span><br><span class="line">  #mixin: <span class="keyword">source</span><span class="regexp">/_data/mi</span>xins.styl</span><br><span class="line">  style: <span class="keyword">source</span><span class="regexp">/_data/</span>styles.styl</span><br></pre></td></tr></table></figure></li><li><p>在后在<code>next</code>主题的<code>source/images</code>目录下添加<code>background.jpg</code>文件,重新启动<code>hexo</code>。 </p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo cl</span></span><br><span class="line"><span class="attribute">hexo g</span></span><br><span class="line"><span class="attribute">hexo s</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>七牛云图床：</p><ul><li><a href="https://cloud.tencent.com/developer/article/1662807">https://cloud.tencent.com/developer/article/1662807</a></li><li>需要注意的是在七牛云创建自己的域名的CDN加速域名时，他的文档叙述有点坑。</li><li>比如我的域名是l3m0nade.xyz，利用此域名创建CDN加速域名，按照他的引导创建，需要输入一个普通域名，这是输入qiniu.l3m0nade.xyz这种二级域名。</li><li>然后会给你一个xxxxx-qiniudns.com,然后要去阿里云域名解析控制台域名解析那里，添加记录，前缀要为qiniu和注册CDN加速域名时对应，CNAME解析，主机记录为这个给你的xxxxx-qiniudns.com。<ul><li>在国内网，访问你的图片CDN url还是挺快的，但你要挂个梯子，浏览器里就会很慢很慢甚至出不来。</li><li>然后发现本地调试挺快没问题，但是上传到github上的，hexo去解析qiniu就会慢到加载不出来。。。</li><li>F12可以看到不沦我的图片是在niqiu还是在github加载，都会是：err_ssl_version_or_cipher_mismatch</li><li>发现问题是我的图片qiniu连接是http的，证书问题，没有证书。而github那个是真的慢。没有证书问题，在firefox上就能很快加载出来，但是chrome不行。。。</li></ul></li></ul></li></ul><h2 id="使用typora写文档"><a href="#使用typora写文档" class="headerlink" title="使用typora写文档"></a>使用typora写文档</h2><ul><li><p>已经写好的md文档*1,里面的图片建议用七牛云存储，放入https的链接。</p></li><li><p>放在/source/_post里</p></li><li><p>要给文档开头加上：</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hexo博客搭建详细教程 一文通</span><br><span class="line">date: 2021-09-07 0:29</span><br><span class="line">tags: [Hexo]</span><br><span class="line">---</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">jQuery对表单的操作及更多应用</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2017-05-26 12:12:57</span></span><br><span class="line"><span class="attr">categories:</span> </span><br><span class="line"><span class="bullet">-</span> <span class="string">web前端</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">jQuery</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">表格</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">表单验证</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><ul><li>博客里不能一篇文章太长全出现，在适当地方加入<!--more-->来分割前面部分为摘要。</li></ul><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>（Hexo搭建博客资料很多很杂，不推荐使用宝塔，可能在配置过程中被新版宝塔卡主。这里推荐的几篇和文中的参考链接基本就够用了。）</p><p><a href="http://num0.top/2020/04/19/%E5%BD%BB%E5%BA%95%E6%90%9E%E6%87%82%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Hexo-GitHubPages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/">Hexo+Github Pages搭建个人博客</a></p><p><a href="https://blog.csdn.net/as480133937/article/details/100138838">Hexo插件，美化</a></p><p><a href="https://www.bilibili.com/read/cv12633102">保姆级教程</a></p><p><a href="https://www.techgrow.cn/posts/755ff30d.html">Next配置</a></p><p><a href="https://theme-next.js.org/plugins/">hexo8.0_plugin官网说明</a></p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ol><li><p>如果改了主题后，怎么改都没反应，clean,g,d了也没反应，本地调试和网上不一样，把.gitkeep删掉。</p></li><li><p>typora那个代码块选择语言最好不要选，传上去hexo解析不了反而不会出现代码块高亮</p></li><li><p>不要在代码块之前用*空格的小标题符号</p></li></ol><h2 id="目前的问题"><a href="#目前的问题" class="headerlink" title="目前的问题"></a>目前的问题</h2><ol><li>post_wordcount不起作用？</li><li>tag和categories怎么用</li></ol>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;提纲&quot;&gt;&lt;a href=&quot;#提纲&quot; class=&quot;headerlink&quot; title=&quot;提纲&quot;&gt;&lt;/a&gt;提纲&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;本篇教程适用于从0.1-1搭建Hexo博客的师傅，对于一些初始环境配置和微小操作可能会忽略到，但这不会影响整体搭建博客的过程。&lt;/li&gt;
&lt;li&gt;Hexo博客可以选择Hexo+Github Pages架构或者Hexo+Github Pages+你的服务器（有无域名都可）。第二种就是第一种做了对服务器的迁移，需要一些git认证和nginx配置和域名解析设置。&lt;/li&gt;
&lt;li&gt;所以下文会进行从第一种到第二种的全部实现过程。以及一些小的美化。&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Hexo" scheme="http://blog.l3m0nade.xyz/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="http://blog.l3m0nade.xyz/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://blog.l3m0nade.xyz/2021/09/04/hello-world/"/>
    <id>http://blog.l3m0nade.xyz/2021/09/04/hello-world/</id>
    <published>2021-09-04T06:49:53.920Z</published>
    <updated>2021-09-04T06:49:53.920Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
